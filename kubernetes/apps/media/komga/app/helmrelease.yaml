---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app komga
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      komga:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: gotson/komga
              tag: "1.11.3@sha256:dda1dbde2c722161ba95ad76dadb4be604c34da902563644a4ca345823f48777"
            env:
              TZ: ${TIMEZONE}
              SERVER_PORT: &port 8080
            resources:
              requests:
                cpu: 15m
                memory: 1Gi
              limits:
                memory: 4Gi
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
#        annotations:
#          gethomepage.dev/enabled: "true"
#          gethomepage.dev/group: Books
#          gethomepage.dev/name: Komga
#          gethomepage.dev/icon: komga.png
#          gethomepage.dev/description: Comic/Ebook Web Reader
#          gethomepage.dev/widget.type: komga
#          gethomepage.dev/widget.url: http://komga.media:8080
#          gethomepage.dev/widget.username: "{{ `{{HOMEPAGE_VAR_KOMGA_USERNAME}}` }}"
#          gethomepage.dev/widget.password: "{{ `{{HOMEPAGE_VAR_KOMGA_PASSWORD}}` }}"
#          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: komga-config
      media:
        type: nfs
        server: ${NFS_SERVER}
        path: ${NFS_MEDIA}
